[{"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\index.js":"1","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\reportWebVitals.js":"2","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\App.js":"3","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\Layout.js":"4","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\Navbar.js":"5","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Category.js":"6","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Food.js":"7","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Group.js":"8","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\User.js":"9","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\StateManager.js":"10","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\reusables\\ObjectList.js":"11","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Login.js":"12","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\RegisterLoginNavbar.js":"13","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Register.js":"14","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\Home.js":"15","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Profile.js":"16","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\ProfileNavbar.js":"17","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Recipes.js":"18"},{"size":561,"mtime":1610630320778,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1610630320778,"results":"21","hashOfConfig":"20"},{"size":249,"mtime":1610792836544,"results":"22","hashOfConfig":"20"},{"size":832,"mtime":1610630320775,"results":"23","hashOfConfig":"20"},{"size":1466,"mtime":1610630320775,"results":"24","hashOfConfig":"20"},{"size":3244,"mtime":1610630320776,"results":"25","hashOfConfig":"20"},{"size":4292,"mtime":1610630320776,"results":"26","hashOfConfig":"20"},{"size":3068,"mtime":1610630320776,"results":"27","hashOfConfig":"20"},{"size":4728,"mtime":1610630320777,"results":"28","hashOfConfig":"20"},{"size":203,"mtime":1610630320774,"results":"29","hashOfConfig":"20"},{"size":1784,"mtime":1610630320777,"results":"30","hashOfConfig":"20"},{"size":1921,"mtime":1610732928780,"results":"31","hashOfConfig":"20"},{"size":1365,"mtime":1610731832521,"results":"32","hashOfConfig":"20"},{"size":5030,"mtime":1610732922612,"results":"33","hashOfConfig":"20"},{"size":3842,"mtime":1610800121868,"results":"34","hashOfConfig":"20"},{"size":505,"mtime":1610796389127,"results":"35","hashOfConfig":"20"},{"size":1423,"mtime":1610800406902,"results":"36","hashOfConfig":"20"},{"size":165,"mtime":1610800258461,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1tjmrcl",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\index.js",[],["82","83"],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\reportWebVitals.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\App.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\Layout.js",[],["84","85"],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\Navbar.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Category.js",["86"],"import React, { Suspense } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\n\r\nexport default function Category() {\r\n  const setData = useSetRecoilState(listData);\r\n  const setRoute = useSetRecoilState(route);\r\n  setRoute(\"categories\");\r\n\r\n  function getCategories() {\r\n    Axios.get(\"http://localhost:8080/categories\")\r\n      .then((res) => {\r\n        let categoryData = [];\r\n        Array.from(res.data).forEach((element) => {\r\n          categoryData.push({\r\n            id: element.id,\r\n            name: element.name,\r\n          });\r\n        });\r\n        setData(categoryData);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n\r\n    let categorybutton = document.getElementById(\"categorybutton\");\r\n    categorybutton.addEventListener(\"click\", () => {\r\n      let categoryName = document.getElementById(\"categoryname\");\r\n\r\n      Axios.post(\"http://localhost:8080/categories\", {\r\n        name: categoryName.value,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          getCategories();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n\r\n    let categoryUpdateButton = document.getElementById(\"categorybutton-update\");\r\n    categoryUpdateButton.addEventListener(\"click\", () => {\r\n      let categoryId = document.getElementById(\"categoryid\");\r\n      let categoryName = document.getElementById(\"categoryname\");\r\n\r\n      if (categoryId.value) {\r\n        // Start update process\r\n\r\n        // 1. Get initial value\r\n        Axios.get(\"http://localhost:8080/categories/\" + categoryId.value)\r\n          .then((res) => {\r\n            // 2. Update with new values if given\r\n            Axios.put(\"http://localhost:8080/categories/\" + categoryId.value, {\r\n              name: categoryName.value ? categoryName.value : res.data.name,\r\n            })\r\n              .then(() => getCategories())\r\n              .catch((err) => console.error(err));\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    });\r\n  }, [setData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Category</h2>\r\n\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"categoryid\" className=\"form-label\">\r\n            Category ID\r\n          </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"categoryid\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"categoryname\" className=\"form-label\">\r\n            Category Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"categoryname\"></input>\r\n        </div>\r\n\r\n        <button type=\"button\" className=\"btn btn-primary\" id=\"categorybutton\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"categorybutton-update\"\r\n        >\r\n          Update Category\r\n        </button>\r\n      </form>\r\n\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Food.js",["87","88"],"import Axios from \"axios\";\r\nimport React, { Suspense, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\n\r\nexport default function Food() {\r\n  let [categories, setCategories] = useState([]);\r\n\r\n  const [data, setData] = useRecoilState(listData);\r\n  const setRoute = useSetRecoilState(route);\r\n  setRoute(\"food\");\r\n\r\n  function getFood() {\r\n    Axios.get(\"http://localhost:8080/food\")\r\n      .then((res) => {\r\n        let foodData = [];\r\n        Array.from(res.data).forEach((element) => {\r\n          foodData.push({\r\n            id: element.id,\r\n            name: element.name,\r\n          });\r\n        });\r\n        setData(foodData);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:8080/categories\")\r\n      .then((res) => {\r\n        setCategories(res.data);\r\n      })\r\n      .catch((err) => console.error(err));\r\n\r\n    getFood();\r\n\r\n    let foodbutton = document.getElementById(\"foodbutton\");\r\n    foodbutton.addEventListener(\"click\", () => {\r\n      let foodName = document.getElementById(\"foodname\");\r\n      let categorySelect = document.getElementById(\"category\");\r\n      let categoryId = categorySelect.options[categorySelect.selectedIndex].id;\r\n\r\n      Axios.post(\"http://localhost:8080/food\", {\r\n        name: foodName.value,\r\n        categoryId: categoryId,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          getFood();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n\r\n    let foodUpdateButton = document.getElementById(\"foodbutton-update\");\r\n    foodUpdateButton.addEventListener(\"click\", () => {\r\n      let foodId = document.getElementById(\"foodid\");\r\n      let foodName = document.getElementById(\"foodname\");\r\n      let categorySelect = document.getElementById(\"category\");\r\n      let categoryId = categorySelect.options[categorySelect.selectedIndex].id;\r\n\r\n      if (foodId.value) {\r\n        // We can start the update process\r\n\r\n        // 1. Find the old reccord\r\n        Axios.get(\"http://localhost:8080/food/\" + foodId.value)\r\n          .then((res) => {\r\n            // 2. We update it with new values if they were given\r\n            Axios.put(\"http://localhost:8080/food/\" + foodId.value, {\r\n              name: foodName.value ? foodName.value : res.data.name,\r\n              categoryId: categoryId ? categoryId : res.data.categoryId,\r\n            })\r\n              .then(() => {\r\n                getFood();\r\n              })\r\n              .catch((err) => console.error(err));\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    });\r\n  }, [setCategories, setData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Food</h2>\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"foodid\" className=\"form-label\">\r\n            Food ID\r\n          </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"foodid\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"foodname\" className=\"form-label\">\r\n            Food Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"foodname\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            id=\"category\"\r\n          >\r\n            <option defaultValue>Open this select menu</option>\r\n\r\n            {categories.map((value, index) => {\r\n              return (\r\n                <option id={value.id} key={index}>\r\n                  {value.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n\r\n        <button type=\"button\" className=\"btn btn-primary\" id=\"foodbutton\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"foodbutton-update\"\r\n        >\r\n          Update Food\r\n        </button>\r\n      </form>\r\n\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Group.js",["89"],"import Axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useEffect, Suspense } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\n\r\nexport default function Group() {\r\n  const setData = useSetRecoilState(listData);\r\n  const setRoute = useSetRecoilState(route);\r\n  setRoute(\"groups\");\r\n\r\n  function getGroups() {\r\n    Axios.get(\"http://localhost:8080/groups\")\r\n      .then((res) => {\r\n        let data = [];\r\n        Array.from(res.data).forEach((element) => {\r\n          data.push({\r\n            id: element.id,\r\n            name: element.name,\r\n          });\r\n        });\r\n        setData(data);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getGroups();\r\n\r\n    let groupbutton = document.getElementById(\"groupbutton\");\r\n    groupbutton.addEventListener(\"click\", () => {\r\n      let groupName = document.getElementById(\"groupname\");\r\n\r\n      Axios.post(\"http://localhost:8080/groups\", {\r\n        name: groupName.value,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          getGroups();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n\r\n    let groupUpdateButton = document.getElementById(\"groupbutton-update\");\r\n    groupUpdateButton.addEventListener(\"click\", () => {\r\n      let groupId = document.getElementById(\"groupid\");\r\n      let groupName = document.getElementById(\"groupname\");\r\n\r\n      if (groupId.value) {\r\n        // Start the update process\r\n\r\n        // 1. Get the original value\r\n        Axios.get(\"http://localhost:8080/groups/\" + groupId.value)\r\n          .then((res) => {\r\n            // 2. Update with new values if given\r\n            Axios.put(\"http://localhost:8080/groups/\" + groupId.value, {\r\n              name: groupName.value,\r\n            })\r\n              .then(() => getGroups())\r\n              .catch((err) => console.error(err));\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    });\r\n  }, [setData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Group</h2>\r\n\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"groupid\" className=\"form-label\">\r\n            Group ID\r\n          </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"groupid\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"groupname\" className=\"form-label\">\r\n            Group Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"groupname\"></input>\r\n        </div>\r\n\r\n        <button type=\"button\" className=\"btn btn-primary\" id=\"groupbutton\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"groupbutton-update\"\r\n        >\r\n          Update Group\r\n        </button>\r\n      </form>\r\n\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\User.js",["90"],"import React, { Suspense } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\n\r\nexport default function User() {\r\n  const setData = useSetRecoilState(listData);\r\n  const setRoute = useSetRecoilState(route);\r\n  setRoute(\"users\");\r\n\r\n  function getUsers() {\r\n    Axios.get(\"http://localhost:8080/users\")\r\n      .then((res) => {\r\n        let userData = [];\r\n        Array.from(res.data).forEach((element) => {\r\n          let dataElement = {\r\n            id: element.id,\r\n            name: element.firstName + \" \" + element.lastname,\r\n          };\r\n          userData.push(dataElement);\r\n        });\r\n        setData(userData);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Getting the existing users from the database\r\n    getUsers();\r\n\r\n    let userbutton = document.getElementById(\"userbutton\");\r\n    userbutton.addEventListener(\"click\", () => {\r\n      let lastName = document.getElementById(\"lastname\");\r\n      let firstName = document.getElementById(\"firstname\");\r\n      let email = document.getElementById(\"email\");\r\n      let userType = document.getElementById(\"usertype\");\r\n\r\n      Axios.post(\"http://localhost:8080/users\", {\r\n        firstName: firstName.value,\r\n        lastname: lastName.value,\r\n        email: email.value,\r\n        userType: userType.value,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          getUsers();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n\r\n    let userUpdateButton = document.getElementById(\"userbutton-update\");\r\n    userUpdateButton.addEventListener(\"click\", () => {\r\n      let userId = document.getElementById(\"userid\");\r\n      let lastName = document.getElementById(\"lastname\");\r\n      let firstName = document.getElementById(\"firstname\");\r\n      let email = document.getElementById(\"email\");\r\n      let userType = document.getElementById(\"usertype\");\r\n\r\n      if (userId.value) {\r\n        // We begin the update process\r\n\r\n        // 1. Retrieve original value\r\n        Axios.get(\"http://localhost:8080/users/\" + userId.value)\r\n          .then((res) => {\r\n            // 2. We update record with new values if given\r\n            Axios.put(\"http://localhost:8080/users/\" + userId.value, {\r\n              firstName: firstName.value ? firstName.value : res.data.firstName,\r\n              lastname: lastName.value ? lastName.value : res.data.lastname,\r\n              email: email.value ? email.value : res.data.email,\r\n              userType: userType.value ? userType.value : res.data.userType,\r\n            })\r\n              .then(() => getUsers())\r\n              .catch((err) => console.error(err));\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    });\r\n  }, [setData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>User</h2>\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"userid\" className=\"form-label\">\r\n            User ID\r\n          </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"userid\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"lastname\" className=\"form-label\">\r\n            Last Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"lastname\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"firstname\" className=\"form-label\">\r\n            First Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"firstname\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input type=\"email\" className=\"form-control\" id=\"email\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            id=\"usertype\"\r\n          >\r\n            <option defaultValue>Open this select menu</option>\r\n            <option value=\"1\">Person</option>\r\n            <option value=\"2\">Company</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary\" id=\"userbutton\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"userbutton-update\"\r\n        >\r\n          Update User\r\n        </button>\r\n      </form>\r\n\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\StateManager.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\reusables\\ObjectList.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Login.js",["91"],"import React, { Suspense } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\n\r\n\r\n  export default function Login() {\r\n    function reg(){\r\n        window.open('http://localhost:3000/profile','_self' )\r\n    }\r\n    const setRoute = useSetRecoilState(route);\r\n    setRoute(\"login\");\r\n\r\n\r\n    return(\r\n        \r\n        \r\n        <div>\r\n        <form className=\"container\">  \r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"lastname\" className=\"form-label\">\r\n              Last Name\r\n            </label>\r\n            <input type=\"text\" className=\"form-control\" id=\"lastname\"></input>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"firstname\" className=\"form-label\">\r\n              First Name\r\n            </label>\r\n            <input type=\"text\" className=\"form-control\" id=\"firstname\"></input>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"email\" className=\"form-label\">\r\n              Email\r\n            </label>\r\n            <input type=\"email\" className=\"form-control\" id=\"email\"></input>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <select\r\n              className=\"form-select\"\r\n              aria-label=\"Default select example\"\r\n              id=\"usertype\"\r\n            >\r\n              <option defaultValue>Open this select menu</option>\r\n              <option value=\"1\">Person</option>\r\n              <option value=\"2\">Company</option>\r\n            </select>\r\n          </div>\r\n          <button onClick={reg} type=\"button\" className=\"btn btn-primary\" id=\"userbutton\">\r\n            Login\r\n          </button>\r\n          \r\n        </form>\r\n  \r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          <ObjectList></ObjectList>\r\n        </Suspense>\r\n      </div>\r\n         \r\n      \r\n    );\r\n  }","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\RegisterLoginNavbar.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Register.js",["92"],"import React, { Suspense } from \"react\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\nimport { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n    \r\n\r\n  export default function Register() {\r\n    \r\n    \r\n    const setData = useSetRecoilState(listData);\r\n    const setRoute = useSetRecoilState(route);\r\n    setRoute(\"register\");\r\n\r\n    function getUsers() {\r\n        Axios.get(\"http://localhost:8080/users\")\r\n          .then((res) => {\r\n            let userData = [];\r\n            Array.from(res.data).forEach((element) => {\r\n              let dataElement = {\r\n                id: element.id,\r\n                name: element.firstName + \" \" + element.lastname,\r\n              };\r\n              userData.push(dataElement);\r\n            });\r\n            setData(userData);\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    \r\n      useEffect(() => {\r\n        \r\n        getUsers();\r\n    \r\n        let userbutton = document.getElementById(\"userbutton\");\r\n        userbutton.addEventListener(\"click\", () => {\r\n          let lastName = document.getElementById(\"lastname\");\r\n          let firstName = document.getElementById(\"firstname\");\r\n          let email = document.getElementById(\"email\");\r\n          let userType = document.getElementById(\"usertype\");\r\n    \r\n          Axios.post(\"http://localhost:8080/users\", {\r\n            firstName: firstName.value,\r\n            lastname: lastName.value,\r\n            email: email.value,\r\n            userType: userType.value,\r\n          })\r\n            .then((res) => {\r\n              console.log(res);\r\n              getUsers();\r\n            })\r\n            .catch((err) => {\r\n              console.error(err);\r\n            });\r\n        });\r\n    \r\n        let userUpdateButton = document.getElementById(\"userbutton-update\");\r\n        userUpdateButton.addEventListener(\"click\", () => {\r\n          let userId = document.getElementById(\"userid\");\r\n          let lastName = document.getElementById(\"lastname\");\r\n          let firstName = document.getElementById(\"firstname\");\r\n          let email = document.getElementById(\"email\");\r\n          let userType = document.getElementById(\"usertype\");\r\n    \r\n          if (userId.value) {\r\n            // We begin the update process\r\n    \r\n            // 1. Retrieve original value\r\n            Axios.get(\"http://localhost:8080/users/\" + userId.value)\r\n              .then((res) => {\r\n                // 2. We update record with new values if given\r\n                Axios.put(\"http://localhost:8080/users/\" + userId.value, {\r\n                  firstName: firstName.value ? firstName.value : res.data.firstName,\r\n                  lastname: lastName.value ? lastName.value : res.data.lastname,\r\n                  email: email.value ? email.value : res.data.email,\r\n                  userType: userType.value ? userType.value : res.data.userType,\r\n                })\r\n                  .then(() => getUsers())\r\n                  .catch((err) => console.error(err));\r\n              })\r\n              .catch((err) => console.error(err));\r\n          }\r\n        });\r\n      }, [setData]);\r\n\r\n\r\n    return(\r\n        <div>\r\n        <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"userid\" className=\"form-label\">\r\n            User ID\r\n          </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"userid\"></input>\r\n        </div>\r\n  \r\n        <div className=\"mb-3\">\r\n            <label htmlFor=\"lastname\" className=\"form-label\">\r\n            Last Name\r\n            </label>\r\n            <input type=\"text\" className=\"form-control\" id=\"lastname\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n            <label htmlFor=\"firstname\" className=\"form-label\">\r\n            First Name\r\n            </label>\r\n            <input type=\"text\" className=\"form-control\" id=\"firstname\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n            <label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n            </label>\r\n            <input type=\"email\" className=\"form-control\" id=\"email\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n            <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            id=\"usertype\"\r\n            >\r\n            <option defaultValue>Open this select menu</option>\r\n            <option value=\"1\">Person</option>\r\n            <option value=\"2\">Company</option>\r\n            </select>\r\n        </div>\r\n        <button  type=\"button\" className=\"btn btn-primary\" id=\"userbutton\">\r\n            Register\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"userbutton-update\"\r\n        >\r\n          Update User\r\n        </button>\r\n        \r\n        </form>\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n        </div>\r\n    )\r\n  }","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\Home.js",["93","94","95"],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Profile.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\ProfileNavbar.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Recipes.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"96","replacedBy":"100"},{"ruleId":"98","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":68,"column":6,"nodeType":"104","endLine":68,"endColumn":15,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":11,"column":10,"nodeType":"108","messageId":"109","endLine":11,"endColumn":14},{"ruleId":"102","severity":1,"message":"110","line":84,"column":6,"nodeType":"104","endLine":84,"endColumn":30,"suggestions":"111"},{"ruleId":"102","severity":1,"message":"112","line":68,"column":6,"nodeType":"104","endLine":68,"endColumn":15,"suggestions":"113"},{"ruleId":"102","severity":1,"message":"114","line":82,"column":6,"nodeType":"104","endLine":82,"endColumn":15,"suggestions":"115"},{"ruleId":"106","severity":1,"message":"116","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":18},{"ruleId":"102","severity":1,"message":"114","line":86,"column":10,"nodeType":"104","endLine":86,"endColumn":19,"suggestions":"117"},{"ruleId":"106","severity":1,"message":"118","line":8,"column":10,"nodeType":"108","messageId":"109","endLine":8,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":43,"column":21,"nodeType":"121","endLine":43,"endColumn":55},{"ruleId":"119","severity":1,"message":"120","line":60,"column":21,"nodeType":"121","endLine":60,"endColumn":49},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],["122"],["123"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.","ArrayExpression",["124"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getFood'. Either include it or remove the dependency array.",["125"],"React Hook useEffect has a missing dependency: 'getGroups'. Either include it or remove the dependency array.",["126"],"React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["127"],"'listData' is defined but never used.",["128"],"'useSetRecoilState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"135","fix":"137"},"Update the dependencies array to be: [getCategories, setData]",{"range":"138","text":"139"},"Update the dependencies array to be: [getFood, setCategories, setData]",{"range":"140","text":"141"},"Update the dependencies array to be: [getGroups, setData]",{"range":"142","text":"143"},"Update the dependencies array to be: [getUsers, setData]",{"range":"144","text":"145"},{"range":"146","text":"145"},[2222,2231],"[getCategories, setData]",[2795,2819],"[getFood, setCategories, setData]",[2076,2085],"[getGroups, setData]",[2922,2931],"[getUsers, setData]",[3188,3197]]