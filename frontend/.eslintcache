[{"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\index.js":"1","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\reportWebVitals.js":"2","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\App.js":"3","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\Home.js":"4","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\Layout.js":"5","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\RegisterLoginNavbar.js":"6","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\Navbar.js":"7","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Register.js":"8","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Login.js":"9","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Group.js":"10","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Profile.js":"11","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Recipes.js":"12","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\ProfileNavbar.js":"13","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Food.js":"14","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Category.js":"15","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\User.js":"16","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Home.js":"17","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\StateManager.js":"18","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\reusables\\Jumbotron.js":"19","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\reusables\\ObjectList.js":"20","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\popup.js":"21"},{"size":561,"mtime":1610630320778,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1610630320778,"results":"24","hashOfConfig":"23"},{"size":442,"mtime":1611140156972,"results":"25","hashOfConfig":"23"},{"size":3842,"mtime":1610800121868,"results":"26","hashOfConfig":"23"},{"size":1578,"mtime":1611140156973,"results":"27","hashOfConfig":"23"},{"size":1365,"mtime":1610731832521,"results":"28","hashOfConfig":"23"},{"size":2707,"mtime":1611140156974,"results":"29","hashOfConfig":"23"},{"size":2801,"mtime":1611140785092,"results":"30","hashOfConfig":"23"},{"size":1421,"mtime":1611140156975,"results":"31","hashOfConfig":"23"},{"size":3068,"mtime":1610630320776,"results":"32","hashOfConfig":"23"},{"size":4169,"mtime":1611178757359,"results":"33","hashOfConfig":"23"},{"size":166,"mtime":1611140156975,"results":"34","hashOfConfig":"23"},{"size":1423,"mtime":1610800406902,"results":"35","hashOfConfig":"23"},{"size":4292,"mtime":1610630320776,"results":"36","hashOfConfig":"23"},{"size":3244,"mtime":1610630320776,"results":"37","hashOfConfig":"23"},{"size":4728,"mtime":1610630320777,"results":"38","hashOfConfig":"23"},{"size":1187,"mtime":1611140156974,"results":"39","hashOfConfig":"23"},{"size":279,"mtime":1611140156973,"results":"40","hashOfConfig":"23"},{"size":409,"mtime":1611140156976,"results":"41","hashOfConfig":"23"},{"size":1784,"mtime":1610630320777,"results":"42","hashOfConfig":"23"},{"size":356,"mtime":1611174823530,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1tjmrcl",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\index.js",[],["97","98"],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\reportWebVitals.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\App.js",["99"],"import \"./App.css\";\r\nimport Home from \"./components/Home\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport Layout from \"./components/Layout\";\r\nimport Axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:8080/create\");\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <RecoilRoot>\r\n        <Layout></Layout>\r\n      </RecoilRoot>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\Home.js",["100","101","102"],"import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport RegisterLoginNavbar from \"./RegisterLoginNavbar\"\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Goal from \"./goal.jpg\";\r\nimport Company from \"./company1.png\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport ProfileNavbar from \"./pages/ProfileNavbar\"\r\nimport Recipes from \"./pages/Recipes\"\r\n \r\n\r\nimport Profile from \"./pages/Profile\"\r\n\r\n\r\n\r\nexport default function Home() {\r\n\r\n \r\n  return (\r\n    <Router>\r\n      \r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n          <header>\r\n        <RegisterLoginNavbar></RegisterLoginNavbar>\r\n        <div className='header'>\r\n          <span className='header-title'>\r\n            <b>Food-Waste</b>\r\n          </span>\r\n          <br />\r\n          <span className='header-text'>\r\n            <b>This app is about..</b>\r\n          </span>\r\n        </div>\r\n\r\n      </header>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column\">\r\n                  <div className=\"img\">\r\n                    <img id=\"company\" src={Company} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"column\">\r\n                  <div className=\"info\">\r\n                    <h1>About us</h1>\r\n                    <br />\r\n                    <h2>Description</h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column\">\r\n                  <div className=\"img\">\r\n                    <img id=\"goal\" src={Goal} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"column\">\r\n                  <div className=\"info\">\r\n                    <h1>Our goal</h1>\r\n                    <br />\r\n                    <h2>Description</h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            \r\n          </Route>\r\n          <Route exact path=\"/login\" >\r\n          <header>\r\n        <RegisterLoginNavbar></RegisterLoginNavbar>\r\n        <div className='header'>\r\n          <span className='header-title'>\r\n            <b>Food-Waste</b>\r\n          </span>\r\n          <br />\r\n          <span className='header-text'>\r\n            <b>This app is about..</b>\r\n          </span>\r\n        </div>\r\n\r\n      </header>\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n          <header>\r\n        <RegisterLoginNavbar></RegisterLoginNavbar>\r\n        <div className='header'>\r\n          <span className='header-title'>\r\n            <b>Food-Waste</b>\r\n          </span>\r\n          <br />\r\n          <span className='header-text'>\r\n            <b>This app is about..</b>\r\n          </span>\r\n        </div>\r\n\r\n      </header>\r\n            <Register />\r\n          </Route>\r\n\r\n          <Route path=\"/profile\">\r\n          <header>\r\n        <ProfileNavbar></ProfileNavbar>\r\n        <div className='header'>\r\n          <span className='header-title'>\r\n            <b>Food-Waste</b>\r\n          </span>\r\n          <br />\r\n          <span className='header-text'>\r\n            <b>This app is about..</b>\r\n          </span>\r\n        </div>\r\n\r\n      </header>\r\n            <Profile/>\r\n          </Route>\r\n          <Route path=\"/recipes\">\r\n          <header>\r\n        <ProfileNavbar></ProfileNavbar>\r\n        <div className='header'>\r\n          <span className='header-title'>\r\n            <b>Food-Waste</b>\r\n          </span>\r\n          <br />\r\n          <span className='header-text'>\r\n            <b>This app is about..</b>\r\n          </span>\r\n        </div>\r\n\r\n      </header>\r\n            <Recipes/>\r\n          </Route>\r\n        </Switch>\r\n\r\n\r\n\r\n      </main>\r\n\r\n\r\n      <footer>\r\n      \r\n      </footer>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\Layout.js",["103","104","105","106","107"],"import React, { Profiler } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport User from \"./pages/User\";\r\nimport Group from \"./pages/Group\";\r\nimport Food from \"./pages/Food\";\r\nimport Category from \"./pages/Category\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Profile from \"./pages/Profile\";\r\n\r\nexport default function Layout() {\r\n  const loggedInLinks = [\r\n    {\r\n      href: \"/profile\",\r\n      name: \"Home\"\r\n    },\r\n    {\r\n      href: \"/\",\r\n      name: \"Logout\"\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {/* The landing page route with the default navbar in place */}\r\n        <Route exact path=\"/\">\r\n          <header>\r\n            <Navbar></Navbar>\r\n          </header>\r\n          <main>\r\n            <Home />\r\n          </main>\r\n        </Route>\r\n\r\n        <Route exact path=\"/login\">\r\n          <header>\r\n            <Navbar></Navbar>\r\n          </header>\r\n          <main>\r\n            <Login />\r\n          </main>\r\n        </Route>\r\n\r\n        <Route exact path=\"/register\">\r\n          <header>\r\n            <Navbar></Navbar>\r\n          </header>\r\n          <main>\r\n            <Register />\r\n          </main>\r\n        </Route>\r\n\r\n        <Route exact path=\"/profile\">\r\n          <header>\r\n            <Navbar links={loggedInLinks}></Navbar>\r\n          </header>\r\n          <main>\r\n            <Profile></Profile>\r\n          </main>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\RegisterLoginNavbar.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\Navbar.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Register.js",["108","109","110","111"],"import React, { Suspense } from \"react\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\nimport { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Jumbotron from \"../reusables/Jumbotron\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Register() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let userbutton = document.getElementById(\"userbutton\");\r\n    userbutton.addEventListener(\"click\", () => {\r\n      let lastName = document.getElementById(\"lastname\");\r\n      let firstName = document.getElementById(\"firstname\");\r\n      let email = document.getElementById(\"email\");\r\n      let userType = document.getElementById(\"usertype\");\r\n\r\n      Axios.post(\"http://localhost:8080/users\", {\r\n        firstName: firstName.value,\r\n        lastname: lastName.value,\r\n        email: email.value,\r\n        userType: userType.value,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          history.push(\"/login\")\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n\r\n    }); \r\n  }, []);\r\n\r\n        \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron></Jumbotron>\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"lastname\" className=\"form-label\">\r\n            Last Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"lastname\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"firstname\" className=\"form-label\">\r\n            First Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"firstname\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input type=\"email\" className=\"form-control\" id=\"email\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <select\r\n            className=\"form-select custom-select\"\r\n            aria-label=\"Default select example\"\r\n            id=\"usertype\"\r\n          >\r\n            <option defaultValue>Choose account type</option>\r\n            <option value=\"person\">Person</option>\r\n            <option value=\"company\">Company</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary\" id=\"userbutton\">\r\n          Register\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"userbutton-update\"\r\n        >\r\n          Update User\r\n        </button>\r\n      </form>\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Login.js",["112","113","114","115","116"],"import React, { Suspense, useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route, user } from \"../../StateManager\";\r\nimport Jumbotron from \"../reusables/Jumbotron\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const setUser = useSetRecoilState(user);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    var loginButton = document.getElementById(\"login-button\");\r\n    let email = document.getElementById(\"email\");\r\n    loginButton.addEventListener(\"click\", () => {\r\n      Axios.get(\"http://localhost:8080/users/email/\" + email.value)\r\n      .then(res => {\r\n        setUser(res.data);\r\n        console.log(res.data);\r\n        history.push(\"/profile\")\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron></Jumbotron>\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input type=\"email\" className=\"form-control\" id=\"email\"></input>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          id=\"login-button\"\r\n        >\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Group.js",["117"],"import Axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useEffect, Suspense } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\n\r\nexport default function Group() {\r\n  const setData = useSetRecoilState(listData);\r\n  const setRoute = useSetRecoilState(route);\r\n  setRoute(\"groups\");\r\n\r\n  function getGroups() {\r\n    Axios.get(\"http://localhost:8080/groups\")\r\n      .then((res) => {\r\n        let data = [];\r\n        Array.from(res.data).forEach((element) => {\r\n          data.push({\r\n            id: element.id,\r\n            name: element.name,\r\n          });\r\n        });\r\n        setData(data);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getGroups();\r\n\r\n    let groupbutton = document.getElementById(\"groupbutton\");\r\n    groupbutton.addEventListener(\"click\", () => {\r\n      let groupName = document.getElementById(\"groupname\");\r\n\r\n      Axios.post(\"http://localhost:8080/groups\", {\r\n        name: groupName.value,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          getGroups();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n\r\n    let groupUpdateButton = document.getElementById(\"groupbutton-update\");\r\n    groupUpdateButton.addEventListener(\"click\", () => {\r\n      let groupId = document.getElementById(\"groupid\");\r\n      let groupName = document.getElementById(\"groupname\");\r\n\r\n      if (groupId.value) {\r\n        // Start the update process\r\n\r\n        // 1. Get the original value\r\n        Axios.get(\"http://localhost:8080/groups/\" + groupId.value)\r\n          .then((res) => {\r\n            // 2. Update with new values if given\r\n            Axios.put(\"http://localhost:8080/groups/\" + groupId.value, {\r\n              name: groupName.value,\r\n            })\r\n              .then(() => getGroups())\r\n              .catch((err) => console.error(err));\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    });\r\n  }, [setData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Group</h2>\r\n\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"groupid\" className=\"form-label\">\r\n            Group ID\r\n          </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"groupid\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"groupname\" className=\"form-label\">\r\n            Group Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"groupname\"></input>\r\n        </div>\r\n\r\n        <button type=\"button\" className=\"btn btn-primary\" id=\"groupbutton\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"groupbutton-update\"\r\n        >\r\n          Update Group\r\n        </button>\r\n      </form>\r\n\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Profile.js",["118","119","120","121","122","123","124"],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Recipes.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\ProfileNavbar.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Food.js",["125","126"],"import Axios from \"axios\";\r\nimport React, { Suspense, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\n\r\nexport default function Food() {\r\n  let [categories, setCategories] = useState([]);\r\n\r\n  const [data, setData] = useRecoilState(listData);\r\n  const setRoute = useSetRecoilState(route);\r\n  setRoute(\"food\");\r\n\r\n  function getFood() {\r\n    Axios.get(\"http://localhost:8080/food\")\r\n      .then((res) => {\r\n        let foodData = [];\r\n        Array.from(res.data).forEach((element) => {\r\n          foodData.push({\r\n            id: element.id,\r\n            name: element.name,\r\n          });\r\n        });\r\n        setData(foodData);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:8080/categories\")\r\n      .then((res) => {\r\n        setCategories(res.data);\r\n      })\r\n      .catch((err) => console.error(err));\r\n\r\n    getFood();\r\n\r\n    let foodbutton = document.getElementById(\"foodbutton\");\r\n    foodbutton.addEventListener(\"click\", () => {\r\n      let foodName = document.getElementById(\"foodname\");\r\n      let categorySelect = document.getElementById(\"category\");\r\n      let categoryId = categorySelect.options[categorySelect.selectedIndex].id;\r\n\r\n      Axios.post(\"http://localhost:8080/food\", {\r\n        name: foodName.value,\r\n        categoryId: categoryId,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          getFood();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n\r\n    let foodUpdateButton = document.getElementById(\"foodbutton-update\");\r\n    foodUpdateButton.addEventListener(\"click\", () => {\r\n      let foodId = document.getElementById(\"foodid\");\r\n      let foodName = document.getElementById(\"foodname\");\r\n      let categorySelect = document.getElementById(\"category\");\r\n      let categoryId = categorySelect.options[categorySelect.selectedIndex].id;\r\n\r\n      if (foodId.value) {\r\n        // We can start the update process\r\n\r\n        // 1. Find the old reccord\r\n        Axios.get(\"http://localhost:8080/food/\" + foodId.value)\r\n          .then((res) => {\r\n            // 2. We update it with new values if they were given\r\n            Axios.put(\"http://localhost:8080/food/\" + foodId.value, {\r\n              name: foodName.value ? foodName.value : res.data.name,\r\n              categoryId: categoryId ? categoryId : res.data.categoryId,\r\n            })\r\n              .then(() => {\r\n                getFood();\r\n              })\r\n              .catch((err) => console.error(err));\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    });\r\n  }, [setCategories, setData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Food</h2>\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"foodid\" className=\"form-label\">\r\n            Food ID\r\n          </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"foodid\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"foodname\" className=\"form-label\">\r\n            Food Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"foodname\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            id=\"category\"\r\n          >\r\n            <option defaultValue>Open this select menu</option>\r\n\r\n            {categories.map((value, index) => {\r\n              return (\r\n                <option id={value.id} key={index}>\r\n                  {value.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n\r\n        <button type=\"button\" className=\"btn btn-primary\" id=\"foodbutton\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"foodbutton-update\"\r\n        >\r\n          Update Food\r\n        </button>\r\n      </form>\r\n\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Category.js",["127"],"import React, { Suspense } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\n\r\nexport default function Category() {\r\n  const setData = useSetRecoilState(listData);\r\n  const setRoute = useSetRecoilState(route);\r\n  setRoute(\"categories\");\r\n\r\n  function getCategories() {\r\n    Axios.get(\"http://localhost:8080/categories\")\r\n      .then((res) => {\r\n        let categoryData = [];\r\n        Array.from(res.data).forEach((element) => {\r\n          categoryData.push({\r\n            id: element.id,\r\n            name: element.name,\r\n          });\r\n        });\r\n        setData(categoryData);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n\r\n    let categorybutton = document.getElementById(\"categorybutton\");\r\n    categorybutton.addEventListener(\"click\", () => {\r\n      let categoryName = document.getElementById(\"categoryname\");\r\n\r\n      Axios.post(\"http://localhost:8080/categories\", {\r\n        name: categoryName.value,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          getCategories();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n\r\n    let categoryUpdateButton = document.getElementById(\"categorybutton-update\");\r\n    categoryUpdateButton.addEventListener(\"click\", () => {\r\n      let categoryId = document.getElementById(\"categoryid\");\r\n      let categoryName = document.getElementById(\"categoryname\");\r\n\r\n      if (categoryId.value) {\r\n        // Start update process\r\n\r\n        // 1. Get initial value\r\n        Axios.get(\"http://localhost:8080/categories/\" + categoryId.value)\r\n          .then((res) => {\r\n            // 2. Update with new values if given\r\n            Axios.put(\"http://localhost:8080/categories/\" + categoryId.value, {\r\n              name: categoryName.value ? categoryName.value : res.data.name,\r\n            })\r\n              .then(() => getCategories())\r\n              .catch((err) => console.error(err));\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    });\r\n  }, [setData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Category</h2>\r\n\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"categoryid\" className=\"form-label\">\r\n            Category ID\r\n          </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"categoryid\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"categoryname\" className=\"form-label\">\r\n            Category Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"categoryname\"></input>\r\n        </div>\r\n\r\n        <button type=\"button\" className=\"btn btn-primary\" id=\"categorybutton\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"categorybutton-update\"\r\n        >\r\n          Update Category\r\n        </button>\r\n      </form>\r\n\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\User.js",["128"],"import React, { Suspense } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\n\r\nexport default function User() {\r\n  const setData = useSetRecoilState(listData);\r\n  const setRoute = useSetRecoilState(route);\r\n  setRoute(\"users\");\r\n\r\n  function getUsers() {\r\n    Axios.get(\"http://localhost:8080/users\")\r\n      .then((res) => {\r\n        let userData = [];\r\n        Array.from(res.data).forEach((element) => {\r\n          let dataElement = {\r\n            id: element.id,\r\n            name: element.firstName + \" \" + element.lastname,\r\n          };\r\n          userData.push(dataElement);\r\n        });\r\n        setData(userData);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Getting the existing users from the database\r\n    getUsers();\r\n\r\n    let userbutton = document.getElementById(\"userbutton\");\r\n    userbutton.addEventListener(\"click\", () => {\r\n      let lastName = document.getElementById(\"lastname\");\r\n      let firstName = document.getElementById(\"firstname\");\r\n      let email = document.getElementById(\"email\");\r\n      let userType = document.getElementById(\"usertype\");\r\n\r\n      Axios.post(\"http://localhost:8080/users\", {\r\n        firstName: firstName.value,\r\n        lastname: lastName.value,\r\n        email: email.value,\r\n        userType: userType.value,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          getUsers();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n\r\n    let userUpdateButton = document.getElementById(\"userbutton-update\");\r\n    userUpdateButton.addEventListener(\"click\", () => {\r\n      let userId = document.getElementById(\"userid\");\r\n      let lastName = document.getElementById(\"lastname\");\r\n      let firstName = document.getElementById(\"firstname\");\r\n      let email = document.getElementById(\"email\");\r\n      let userType = document.getElementById(\"usertype\");\r\n\r\n      if (userId.value) {\r\n        // We begin the update process\r\n\r\n        // 1. Retrieve original value\r\n        Axios.get(\"http://localhost:8080/users/\" + userId.value)\r\n          .then((res) => {\r\n            // 2. We update record with new values if given\r\n            Axios.put(\"http://localhost:8080/users/\" + userId.value, {\r\n              firstName: firstName.value ? firstName.value : res.data.firstName,\r\n              lastname: lastName.value ? lastName.value : res.data.lastname,\r\n              email: email.value ? email.value : res.data.email,\r\n              userType: userType.value ? userType.value : res.data.userType,\r\n            })\r\n              .then(() => getUsers())\r\n              .catch((err) => console.error(err));\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    });\r\n  }, [setData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>User</h2>\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"userid\" className=\"form-label\">\r\n            User ID\r\n          </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"userid\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"lastname\" className=\"form-label\">\r\n            Last Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"lastname\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"firstname\" className=\"form-label\">\r\n            First Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"firstname\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input type=\"email\" className=\"form-control\" id=\"email\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            id=\"usertype\"\r\n          >\r\n            <option defaultValue>Open this select menu</option>\r\n            <option value=\"1\">Person</option>\r\n            <option value=\"2\">Company</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary\" id=\"userbutton\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"userbutton-update\"\r\n        >\r\n          Update User\r\n        </button>\r\n      </form>\r\n\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\Home.js",["129","130"],"import React from \"react\";\r\nimport \"../../resources/styles/home.css\";\r\nimport fridge from \"../../resources/images/fridge.svg\";\r\nimport give_food from \"../../resources/images/give_food.svg\";\r\nimport Jumbotron from \"../reusables/Jumbotron\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <Jumbotron></Jumbotron>\r\n      <section className=\"container-fluid d-flex flex-md-row flex-column justify-content-md-between align-items-center presentation-section\">\r\n        <img src={fridge}></img>\r\n        <p className=\"text-center\">\r\n          List the contents of your fridge that are about to go bad and share\r\n          them with your friends or other people on social media. They'll sure\r\n          find something tasty in there!\r\n        </p>\r\n      </section>\r\n      <section className=\"container-fluid d-flex flex-md-row-reverse flex-column justify-content-md-between align-items-center presentation-section\">\r\n        <img src={give_food}></img>\r\n        <p className=\"text-center\">\r\n          Instead of thowing away the food you think you don't need, gift it to people\r\n          that would otherwise pay for it.\r\n        </p>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\StateManager.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\reusables\\Jumbotron.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\reusables\\ObjectList.js",[],"C:\\College\\Web\\Project\\FoodWaste-App\\frontend\\src\\components\\pages\\popup.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":12},{"ruleId":"135","severity":1,"message":"139","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":27},{"ruleId":"140","severity":1,"message":"141","line":43,"column":21,"nodeType":"142","endLine":43,"endColumn":55},{"ruleId":"140","severity":1,"message":"141","line":60,"column":21,"nodeType":"142","endLine":60,"endColumn":49},{"ruleId":"135","severity":1,"message":"143","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"144","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":12},{"ruleId":"135","severity":1,"message":"145","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":13},{"ruleId":"135","severity":1,"message":"146","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":12},{"ruleId":"135","severity":1,"message":"147","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":16},{"ruleId":"135","severity":1,"message":"139","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":27},{"ruleId":"135","severity":1,"message":"148","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":18},{"ruleId":"135","severity":1,"message":"149","line":4,"column":20,"nodeType":"137","messageId":"138","endLine":4,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":36,"column":6,"nodeType":"152","endLine":36,"endColumn":8,"suggestions":"153"},{"ruleId":"135","severity":1,"message":"154","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"148","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":18},{"ruleId":"135","severity":1,"message":"149","line":3,"column":20,"nodeType":"137","messageId":"138","endLine":3,"endColumn":25},{"ruleId":"135","severity":1,"message":"155","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":18},{"ruleId":"150","severity":1,"message":"156","line":27,"column":6,"nodeType":"152","endLine":27,"endColumn":8,"suggestions":"157"},{"ruleId":"150","severity":1,"message":"158","line":68,"column":6,"nodeType":"152","endLine":68,"endColumn":15,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":30,"column":37,"nodeType":"162","messageId":"163","endLine":30,"endColumn":39},{"ruleId":"135","severity":1,"message":"164","line":39,"column":11,"nodeType":"137","messageId":"138","endLine":39,"endColumn":18},{"ruleId":"160","severity":1,"message":"161","line":86,"column":18,"nodeType":"162","messageId":"163","endLine":86,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":96,"column":9,"nodeType":"142","endLine":96,"endColumn":56},{"ruleId":"160","severity":1,"message":"165","line":97,"column":39,"nodeType":"162","messageId":"163","endLine":97,"endColumn":41},{"ruleId":"140","severity":1,"message":"141","line":156,"column":5,"nodeType":"142","endLine":156,"endColumn":58},{"ruleId":"140","severity":1,"message":"141","line":157,"column":5,"nodeType":"142","endLine":157,"endColumn":62},{"ruleId":"135","severity":1,"message":"166","line":11,"column":10,"nodeType":"137","messageId":"138","endLine":11,"endColumn":14},{"ruleId":"150","severity":1,"message":"167","line":84,"column":6,"nodeType":"152","endLine":84,"endColumn":30,"suggestions":"168"},{"ruleId":"150","severity":1,"message":"169","line":68,"column":6,"nodeType":"152","endLine":68,"endColumn":15,"suggestions":"170"},{"ruleId":"150","severity":1,"message":"171","line":82,"column":6,"nodeType":"152","endLine":82,"endColumn":15,"suggestions":"172"},{"ruleId":"140","severity":1,"message":"141","line":12,"column":9,"nodeType":"142","endLine":12,"endColumn":27},{"ruleId":"140","severity":1,"message":"141","line":20,"column":9,"nodeType":"142","endLine":20,"endColumn":30},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'useSetRecoilState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Profiler' is defined but never used.","'User' is defined but never used.","'Group' is defined but never used.","'Food' is defined but never used.","'Category' is defined but never used.","'listData' is defined but never used.","'route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["175"],"'Suspense' is defined but never used.","'ObjectList' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'setUser'. Either include them or remove the dependency array.",["176"],"React Hook useEffect has a missing dependency: 'getGroups'. Either include it or remove the dependency array.",["177"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'product' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFood'. Either include it or remove the dependency array.",["178"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["179"],"React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["180"],"no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [history]",{"range":"193","text":"194"},"Update the dependencies array to be: [history, setUser]",{"range":"195","text":"196"},"Update the dependencies array to be: [getGroups, setData]",{"range":"197","text":"198"},"Update the dependencies array to be: [getFood, setCategories, setData]",{"range":"199","text":"200"},"Update the dependencies array to be: [getCategories, setData]",{"range":"201","text":"202"},"Update the dependencies array to be: [getUsers, setData]",{"range":"203","text":"204"},[1181,1183],"[history]",[909,911],"[history, setUser]",[2076,2085],"[getGroups, setData]",[2795,2819],"[getFood, setCategories, setData]",[2222,2231],"[getCategories, setData]",[2922,2931],"[getUsers, setData]"]