[{"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\index.js":"1","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\App.js":"3","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\Home.js":"4","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\Layout.js":"5","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\RegisterLoginNavbar.js":"6","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\Navbar.js":"7","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Register.js":"8","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Login.js":"9","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\ProfileNavbar.js":"10","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Recipes.js":"11","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Group.js":"12","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Profile.js":"13","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Food.js":"14","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Category.js":"15","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\User.js":"16","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\StateManager.js":"17","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\reusables\\ObjectList.js":"18","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Home.js":"19","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\reusables\\Jumbotron.js":"20","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Friends.js":"21","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\FriendProfile.js":"22","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\popup.js":"23"},{"size":561,"mtime":1611140113205,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1611140113205,"results":"26","hashOfConfig":"25"},{"size":442,"mtime":1611176479962,"results":"27","hashOfConfig":"25"},{"size":3842,"mtime":1611140363714,"results":"28","hashOfConfig":"25"},{"size":2203,"mtime":1611176519539,"results":"29","hashOfConfig":"25"},{"size":1365,"mtime":1611140363715,"results":"30","hashOfConfig":"25"},{"size":2707,"mtime":1611176479965,"results":"31","hashOfConfig":"25"},{"size":2801,"mtime":1611176569099,"results":"32","hashOfConfig":"25"},{"size":1421,"mtime":1611176479966,"results":"33","hashOfConfig":"25"},{"size":1423,"mtime":1611140363720,"results":"34","hashOfConfig":"25"},{"size":166,"mtime":1611176479972,"results":"35","hashOfConfig":"25"},{"size":3068,"mtime":1611140113204,"results":"36","hashOfConfig":"25"},{"size":4859,"mtime":1611176886560,"results":"37","hashOfConfig":"25"},{"size":4292,"mtime":1611140113203,"results":"38","hashOfConfig":"25"},{"size":3244,"mtime":1611140113203,"results":"39","hashOfConfig":"25"},{"size":4728,"mtime":1611140113204,"results":"40","hashOfConfig":"25"},{"size":466,"mtime":1611176519537,"results":"41","hashOfConfig":"25"},{"size":1784,"mtime":1611140113204,"results":"42","hashOfConfig":"25"},{"size":1187,"mtime":1611176479965,"results":"43","hashOfConfig":"25"},{"size":409,"mtime":1611176479984,"results":"44","hashOfConfig":"25"},{"size":6812,"mtime":1611176519540,"results":"45","hashOfConfig":"25"},{"size":592,"mtime":1611176519539,"results":"46","hashOfConfig":"25"},{"size":356,"mtime":1611176569099,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"19ztet4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\index.js",[],["104","105"],"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\App.js",["106"],"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\Home.js",["107","108","109"],"import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport RegisterLoginNavbar from \"./RegisterLoginNavbar\"\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Goal from \"./goal.jpg\";\r\nimport Company from \"./company1.png\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport ProfileNavbar from \"./pages/ProfileNavbar\"\r\nimport Recipes from \"./pages/Recipes\"\r\n \r\n\r\nimport Profile from \"./pages/Profile\"\r\n\r\n\r\n\r\nexport default function Home() {\r\n\r\n \r\n  return (\r\n    <Router>\r\n      \r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n          <header>\r\n        <RegisterLoginNavbar></RegisterLoginNavbar>\r\n        <div className='header'>\r\n          <span className='header-title'>\r\n            <b>Food-Waste</b>\r\n          </span>\r\n          <br />\r\n          <span className='header-text'>\r\n            <b>This app is about..</b>\r\n          </span>\r\n        </div>\r\n\r\n      </header>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column\">\r\n                  <div className=\"img\">\r\n                    <img id=\"company\" src={Company} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"column\">\r\n                  <div className=\"info\">\r\n                    <h1>About us</h1>\r\n                    <br />\r\n                    <h2>Description</h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column\">\r\n                  <div className=\"img\">\r\n                    <img id=\"goal\" src={Goal} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"column\">\r\n                  <div className=\"info\">\r\n                    <h1>Our goal</h1>\r\n                    <br />\r\n                    <h2>Description</h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            \r\n          </Route>\r\n          <Route exact path=\"/login\" >\r\n          <header>\r\n        <RegisterLoginNavbar></RegisterLoginNavbar>\r\n        <div className='header'>\r\n          <span className='header-title'>\r\n            <b>Food-Waste</b>\r\n          </span>\r\n          <br />\r\n          <span className='header-text'>\r\n            <b>This app is about..</b>\r\n          </span>\r\n        </div>\r\n\r\n      </header>\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n          <header>\r\n        <RegisterLoginNavbar></RegisterLoginNavbar>\r\n        <div className='header'>\r\n          <span className='header-title'>\r\n            <b>Food-Waste</b>\r\n          </span>\r\n          <br />\r\n          <span className='header-text'>\r\n            <b>This app is about..</b>\r\n          </span>\r\n        </div>\r\n\r\n      </header>\r\n            <Register />\r\n          </Route>\r\n\r\n          <Route path=\"/profile\">\r\n          <header>\r\n        <ProfileNavbar></ProfileNavbar>\r\n        <div className='header'>\r\n          <span className='header-title'>\r\n            <b>Food-Waste</b>\r\n          </span>\r\n          <br />\r\n          <span className='header-text'>\r\n            <b>This app is about..</b>\r\n          </span>\r\n        </div>\r\n\r\n      </header>\r\n            <Profile/>\r\n          </Route>\r\n          <Route path=\"/recipes\">\r\n          <header>\r\n        <ProfileNavbar></ProfileNavbar>\r\n        <div className='header'>\r\n          <span className='header-title'>\r\n            <b>Food-Waste</b>\r\n          </span>\r\n          <br />\r\n          <span className='header-text'>\r\n            <b>This app is about..</b>\r\n          </span>\r\n        </div>\r\n\r\n      </header>\r\n            <Recipes/>\r\n          </Route>\r\n        </Switch>\r\n\r\n\r\n\r\n      </main>\r\n\r\n\r\n      <footer>\r\n      \r\n      </footer>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\Layout.js",["110","111","112","113","114"],"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\RegisterLoginNavbar.js",[],"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Register.js",["115","116","117","118"],"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Login.js",["119","120","121","122","123"],"import React, { Suspense, useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route, user } from \"../../StateManager\";\r\nimport Jumbotron from \"../reusables/Jumbotron\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const setUser = useSetRecoilState(user);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    var loginButton = document.getElementById(\"login-button\");\r\n    let email = document.getElementById(\"email\");\r\n    loginButton.addEventListener(\"click\", () => {\r\n      Axios.get(\"http://localhost:8080/users/email/\" + email.value)\r\n      .then(res => {\r\n        setUser(res.data);\r\n        console.log(res.data);\r\n        history.push(\"/profile\")\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron></Jumbotron>\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input type=\"email\" className=\"form-control\" id=\"email\"></input>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          id=\"login-button\"\r\n        >\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\ProfileNavbar.js",[],"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Recipes.js",[],"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Group.js",["124"],"import Axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useEffect, Suspense } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\n\r\nexport default function Group() {\r\n  const setData = useSetRecoilState(listData);\r\n  const setRoute = useSetRecoilState(route);\r\n  setRoute(\"groups\");\r\n\r\n  function getGroups() {\r\n    Axios.get(\"http://localhost:8080/groups\")\r\n      .then((res) => {\r\n        let data = [];\r\n        Array.from(res.data).forEach((element) => {\r\n          data.push({\r\n            id: element.id,\r\n            name: element.name,\r\n          });\r\n        });\r\n        setData(data);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getGroups();\r\n\r\n    let groupbutton = document.getElementById(\"groupbutton\");\r\n    groupbutton.addEventListener(\"click\", () => {\r\n      let groupName = document.getElementById(\"groupname\");\r\n\r\n      Axios.post(\"http://localhost:8080/groups\", {\r\n        name: groupName.value,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          getGroups();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n\r\n    let groupUpdateButton = document.getElementById(\"groupbutton-update\");\r\n    groupUpdateButton.addEventListener(\"click\", () => {\r\n      let groupId = document.getElementById(\"groupid\");\r\n      let groupName = document.getElementById(\"groupname\");\r\n\r\n      if (groupId.value) {\r\n        // Start the update process\r\n\r\n        // 1. Get the original value\r\n        Axios.get(\"http://localhost:8080/groups/\" + groupId.value)\r\n          .then((res) => {\r\n            // 2. Update with new values if given\r\n            Axios.put(\"http://localhost:8080/groups/\" + groupId.value, {\r\n              name: groupName.value,\r\n            })\r\n              .then(() => getGroups())\r\n              .catch((err) => console.error(err));\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    });\r\n  }, [setData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Group</h2>\r\n\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"groupid\" className=\"form-label\">\r\n            Group ID\r\n          </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"groupid\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"groupname\" className=\"form-label\">\r\n            Group Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"groupname\"></input>\r\n        </div>\r\n\r\n        <button type=\"button\" className=\"btn btn-primary\" id=\"groupbutton\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"groupbutton-update\"\r\n        >\r\n          Update Group\r\n        </button>\r\n      </form>\r\n\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Profile.js",["125"],"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Food.js",["126","127"],"import Axios from \"axios\";\r\nimport React, { Suspense, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\n\r\nexport default function Food() {\r\n  let [categories, setCategories] = useState([]);\r\n\r\n  const [data, setData] = useRecoilState(listData);\r\n  const setRoute = useSetRecoilState(route);\r\n  setRoute(\"food\");\r\n\r\n  function getFood() {\r\n    Axios.get(\"http://localhost:8080/food\")\r\n      .then((res) => {\r\n        let foodData = [];\r\n        Array.from(res.data).forEach((element) => {\r\n          foodData.push({\r\n            id: element.id,\r\n            name: element.name,\r\n          });\r\n        });\r\n        setData(foodData);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:8080/categories\")\r\n      .then((res) => {\r\n        setCategories(res.data);\r\n      })\r\n      .catch((err) => console.error(err));\r\n\r\n    getFood();\r\n\r\n    let foodbutton = document.getElementById(\"foodbutton\");\r\n    foodbutton.addEventListener(\"click\", () => {\r\n      let foodName = document.getElementById(\"foodname\");\r\n      let categorySelect = document.getElementById(\"category\");\r\n      let categoryId = categorySelect.options[categorySelect.selectedIndex].id;\r\n\r\n      Axios.post(\"http://localhost:8080/food\", {\r\n        name: foodName.value,\r\n        categoryId: categoryId,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          getFood();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n\r\n    let foodUpdateButton = document.getElementById(\"foodbutton-update\");\r\n    foodUpdateButton.addEventListener(\"click\", () => {\r\n      let foodId = document.getElementById(\"foodid\");\r\n      let foodName = document.getElementById(\"foodname\");\r\n      let categorySelect = document.getElementById(\"category\");\r\n      let categoryId = categorySelect.options[categorySelect.selectedIndex].id;\r\n\r\n      if (foodId.value) {\r\n        // We can start the update process\r\n\r\n        // 1. Find the old reccord\r\n        Axios.get(\"http://localhost:8080/food/\" + foodId.value)\r\n          .then((res) => {\r\n            // 2. We update it with new values if they were given\r\n            Axios.put(\"http://localhost:8080/food/\" + foodId.value, {\r\n              name: foodName.value ? foodName.value : res.data.name,\r\n              categoryId: categoryId ? categoryId : res.data.categoryId,\r\n            })\r\n              .then(() => {\r\n                getFood();\r\n              })\r\n              .catch((err) => console.error(err));\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    });\r\n  }, [setCategories, setData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Food</h2>\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"foodid\" className=\"form-label\">\r\n            Food ID\r\n          </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"foodid\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"foodname\" className=\"form-label\">\r\n            Food Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"foodname\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            id=\"category\"\r\n          >\r\n            <option defaultValue>Open this select menu</option>\r\n\r\n            {categories.map((value, index) => {\r\n              return (\r\n                <option id={value.id} key={index}>\r\n                  {value.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n\r\n        <button type=\"button\" className=\"btn btn-primary\" id=\"foodbutton\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"foodbutton-update\"\r\n        >\r\n          Update Food\r\n        </button>\r\n      </form>\r\n\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Category.js",["128"],"import React, { Suspense } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\n\r\nexport default function Category() {\r\n  const setData = useSetRecoilState(listData);\r\n  const setRoute = useSetRecoilState(route);\r\n  setRoute(\"categories\");\r\n\r\n  function getCategories() {\r\n    Axios.get(\"http://localhost:8080/categories\")\r\n      .then((res) => {\r\n        let categoryData = [];\r\n        Array.from(res.data).forEach((element) => {\r\n          categoryData.push({\r\n            id: element.id,\r\n            name: element.name,\r\n          });\r\n        });\r\n        setData(categoryData);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n\r\n    let categorybutton = document.getElementById(\"categorybutton\");\r\n    categorybutton.addEventListener(\"click\", () => {\r\n      let categoryName = document.getElementById(\"categoryname\");\r\n\r\n      Axios.post(\"http://localhost:8080/categories\", {\r\n        name: categoryName.value,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          getCategories();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n\r\n    let categoryUpdateButton = document.getElementById(\"categorybutton-update\");\r\n    categoryUpdateButton.addEventListener(\"click\", () => {\r\n      let categoryId = document.getElementById(\"categoryid\");\r\n      let categoryName = document.getElementById(\"categoryname\");\r\n\r\n      if (categoryId.value) {\r\n        // Start update process\r\n\r\n        // 1. Get initial value\r\n        Axios.get(\"http://localhost:8080/categories/\" + categoryId.value)\r\n          .then((res) => {\r\n            // 2. Update with new values if given\r\n            Axios.put(\"http://localhost:8080/categories/\" + categoryId.value, {\r\n              name: categoryName.value ? categoryName.value : res.data.name,\r\n            })\r\n              .then(() => getCategories())\r\n              .catch((err) => console.error(err));\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    });\r\n  }, [setData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Category</h2>\r\n\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"categoryid\" className=\"form-label\">\r\n            Category ID\r\n          </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"categoryid\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"categoryname\" className=\"form-label\">\r\n            Category Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"categoryname\"></input>\r\n        </div>\r\n\r\n        <button type=\"button\" className=\"btn btn-primary\" id=\"categorybutton\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"categorybutton-update\"\r\n        >\r\n          Update Category\r\n        </button>\r\n      </form>\r\n\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\User.js",["129"],"import React, { Suspense } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport ObjectList from \"../reusables/ObjectList\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { listData, route } from \"../../StateManager\";\r\n\r\nexport default function User() {\r\n  const setData = useSetRecoilState(listData);\r\n  const setRoute = useSetRecoilState(route);\r\n  setRoute(\"users\");\r\n\r\n  function getUsers() {\r\n    Axios.get(\"http://localhost:8080/users\")\r\n      .then((res) => {\r\n        let userData = [];\r\n        Array.from(res.data).forEach((element) => {\r\n          let dataElement = {\r\n            id: element.id,\r\n            name: element.firstName + \" \" + element.lastname,\r\n          };\r\n          userData.push(dataElement);\r\n        });\r\n        setData(userData);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Getting the existing users from the database\r\n    getUsers();\r\n\r\n    let userbutton = document.getElementById(\"userbutton\");\r\n    userbutton.addEventListener(\"click\", () => {\r\n      let lastName = document.getElementById(\"lastname\");\r\n      let firstName = document.getElementById(\"firstname\");\r\n      let email = document.getElementById(\"email\");\r\n      let userType = document.getElementById(\"usertype\");\r\n\r\n      Axios.post(\"http://localhost:8080/users\", {\r\n        firstName: firstName.value,\r\n        lastname: lastName.value,\r\n        email: email.value,\r\n        userType: userType.value,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          getUsers();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n\r\n    let userUpdateButton = document.getElementById(\"userbutton-update\");\r\n    userUpdateButton.addEventListener(\"click\", () => {\r\n      let userId = document.getElementById(\"userid\");\r\n      let lastName = document.getElementById(\"lastname\");\r\n      let firstName = document.getElementById(\"firstname\");\r\n      let email = document.getElementById(\"email\");\r\n      let userType = document.getElementById(\"usertype\");\r\n\r\n      if (userId.value) {\r\n        // We begin the update process\r\n\r\n        // 1. Retrieve original value\r\n        Axios.get(\"http://localhost:8080/users/\" + userId.value)\r\n          .then((res) => {\r\n            // 2. We update record with new values if given\r\n            Axios.put(\"http://localhost:8080/users/\" + userId.value, {\r\n              firstName: firstName.value ? firstName.value : res.data.firstName,\r\n              lastname: lastName.value ? lastName.value : res.data.lastname,\r\n              email: email.value ? email.value : res.data.email,\r\n              userType: userType.value ? userType.value : res.data.userType,\r\n            })\r\n              .then(() => getUsers())\r\n              .catch((err) => console.error(err));\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    });\r\n  }, [setData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>User</h2>\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"userid\" className=\"form-label\">\r\n            User ID\r\n          </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"userid\"></input>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"lastname\" className=\"form-label\">\r\n            Last Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"lastname\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"firstname\" className=\"form-label\">\r\n            First Name\r\n          </label>\r\n          <input type=\"text\" className=\"form-control\" id=\"firstname\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input type=\"email\" className=\"form-control\" id=\"email\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            id=\"usertype\"\r\n          >\r\n            <option defaultValue>Open this select menu</option>\r\n            <option value=\"1\">Person</option>\r\n            <option value=\"2\">Company</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary\" id=\"userbutton\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success ml-2\"\r\n          id=\"userbutton-update\"\r\n        >\r\n          Update User\r\n        </button>\r\n      </form>\r\n\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ObjectList></ObjectList>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\StateManager.js",[],"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\reusables\\ObjectList.js",[],"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Home.js",["130","131"],"import React from \"react\";\r\nimport \"../../resources/styles/home.css\";\r\nimport fridge from \"../../resources/images/fridge.svg\";\r\nimport give_food from \"../../resources/images/give_food.svg\";\r\nimport Jumbotron from \"../reusables/Jumbotron\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <Jumbotron></Jumbotron>\r\n      <section className=\"container-fluid d-flex flex-md-row flex-column justify-content-md-between align-items-center presentation-section\">\r\n        <img src={fridge}></img>\r\n        <p className=\"text-center\">\r\n          List the contents of your fridge that are about to go bad and share\r\n          them with your friends or other people on social media. They'll sure\r\n          find something tasty in there!\r\n        </p>\r\n      </section>\r\n      <section className=\"container-fluid d-flex flex-md-row-reverse flex-column justify-content-md-between align-items-center presentation-section\">\r\n        <img src={give_food}></img>\r\n        <p className=\"text-center\">\r\n          Instead of thowing away the food you think you don't need, gift it to people\r\n          that would otherwise pay for it.\r\n        </p>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\reusables\\Jumbotron.js",[],"C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\Friends.js",["132","133","134"],"import React, { Suspense, useEffect } from \"react\";\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { currentFriend, friends, user } from \"../../StateManager\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function Friends() {\r\n  const currentUser = useRecoilValue(user);\r\n  const [currentFriends, setCurrentFriends] = useRecoilState(friends);\r\n  const setCurrentFriend = useSetRecoilState(currentFriend);\r\n  const history = useHistory();\r\n\r\n  function getFriends() {\r\n    Axios.get(\"http://localhost:8080/friends/\" + currentUser.id)\r\n      .then((res) => {\r\n        setCurrentFriends(res.data.friends);\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  if (currentUser == undefined) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  function saveTag(element, f) {\r\n    if (element.checked) {\r\n      Axios.put(`http://localhost:8080/users/${f.id}`, {\r\n        firstName: f.firstName,\r\n        lastname: f.lastname,\r\n        userType: f.userType,\r\n        email: f.email,\r\n        tag: element.value,\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n        })\r\n        .catch(console.log);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let addFriendButton = document.getElementById(\"add-friend-button\");\r\n    let friendEmailInput = document.getElementById(\"email\");\r\n\r\n    // Clear invites upon entering this page\r\n    Axios.put(\"http://localhost:8080/invites\", {\r\n      //the route from the server where we update the invites\r\n      id: currentUser.id,\r\n      invites: [],\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n\r\n    addFriendButton.addEventListener(\"click\", () => {\r\n      // Define the Axios request that adds a new friend\r\n      Axios.post(\"http://localhost:8080/friends\", {\r\n        currentUserEmail: currentUser.email,\r\n        friendEmail: friendEmailInput.value,\r\n      })\r\n        .then((res) => {\r\n          getFriends();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n    // Get radio buttons\r\n    currentFriends.forEach((f) => {\r\n      let vegetarian = document.getElementById(\"vegetarian-\" + f.id);\r\n      let carnivor = document.getElementById(\"carnivor-\" + f.id);\r\n      let zacusca = document.getElementById(\"zacusca-\" + f.id);\r\n\r\n      switch (f.tag) {\r\n        case \"vegetarian\":\r\n          vegetarian.checked = true;\r\n          break;\r\n        case \"carnivor\":\r\n          carnivor.checked = true;\r\n          break;\r\n        case \"zacusca\":\r\n          zacusca.checked = true;\r\n          break;\r\n      }\r\n\r\n      [vegetarian, carnivor, zacusca].forEach((radio) => {\r\n        radio.addEventListener(\"change\", (ev) => {\r\n          saveTag(ev.target, f);\r\n        });\r\n      });\r\n\r\n      // Add click event for invite buttons\r\n      let inviteButton = document.getElementById(\"invite-button-\" + f.id);\r\n\r\n      // The invites of the one I want to invite\r\n      let invites = JSON.parse(f.invites); //convert the string of invites into an array of objects json\r\n      if (!invites) {\r\n        invites = [\r\n          {\r\n            id: currentUser.id,\r\n            name: currentUser.firstName + \" \" + currentUser.lastname,\r\n          },\r\n        ];\r\n      } else {\r\n        invites.push({\r\n          id: currentUser.id,\r\n          name: currentUser.firstName + \" \" + currentUser.lastname,\r\n        });\r\n      }\r\n\r\n      //\"[{id: 2}, {id: 4}, {id: 8}]\"\r\n\r\n      inviteButton.addEventListener(\"click\", () => {\r\n        Axios.put(\"http://localhost:8080/invites\", {\r\n          //the route from the server where we update the invites\r\n          id: f.id,\r\n          invites: invites,\r\n        })\r\n          .then((res) => {\r\n            console.log(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      });\r\n\r\n      // Add event listener for navigation to frind profile\r\n      let viewButton = document.getElementById(\"view-\" + f.id);\r\n      viewButton.addEventListener(\"click\", () => {\r\n        setCurrentFriend(f);\r\n        history.push(\"/profile/friend\");\r\n      });\r\n    });\r\n  }, [setCurrentFriends]);\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input type=\"email\" className=\"form-control\" id=\"email\"></input>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          id=\"add-friend-button\"\r\n        >\r\n          Add friend\r\n        </button>\r\n      </form>\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <section className=\"container mt-4\">\r\n          {currentFriends.map((f) => {\r\n            return (\r\n              <div\r\n                className=\"container-fluid d-flex justify-content-between mt-3\"\r\n                key={f.email}\r\n              >\r\n                <h4>\r\n                  {f.firstName} {f.lastname} ({f.email})\r\n                </h4>\r\n                <div>\r\n                  <input\r\n                    className=\"mr-1\"\r\n                    id={\"vegetarian-\" + f.id}\r\n                    type=\"radio\"\r\n                    name=\"tag\"\r\n                    value=\"vegetarian\"\r\n                  ></input>\r\n                  <label className=\"mr-2\" htmlFor=\"vegetarian\">\r\n                    Vegetarian\r\n                  </label>\r\n                  <input\r\n                    className=\"mr-1\"\r\n                    id={\"carnivor-\" + f.id}\r\n                    type=\"radio\"\r\n                    name=\"tag\"\r\n                    value=\"carnivor\"\r\n                  ></input>\r\n                  <label className=\"mr-2\" htmlFor=\"carnivor\">\r\n                    Carnivor\r\n                  </label>\r\n                  <input\r\n                    className=\"mr-1\"\r\n                    id={\"zacusca-\" + f.id}\r\n                    type=\"radio\"\r\n                    name=\"tag\"\r\n                    value=\"zacusca\"\r\n                  ></input>\r\n                  <label className=\"mr-2\" htmlFor=\"zacusca\">\r\n                    Iubitor zacusca\r\n                  </label>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    className=\"btn btn-success mr-1\"\r\n                    id={\"invite-button-\" + f.id}\r\n                  >\r\n                    Invite to see fridge\r\n                  </button>\r\n                  <button className=\"btn btn-primary\" id={\"view-\" + f.id}>\r\n                    View Fridge\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </section>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\FriendProfile.js",["135","136"],"import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { currentFriend } from \"../../StateManager\";\r\nimport avatar from \"../../resources/images/avatar.svg\";\r\n\r\nexport default function FriendProfile() {\r\n  let friend = useRecoilValue(currentFriend);\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"container-fluid d-flex flex-column align-items-center\">\r\n        <img src={avatar} width=\"100px\" height=\"100px\"></img>\r\n        <h2>\r\n          {friend != undefined ? friend.firstName + \" \" + friend.lastname : \"\"}\r\n        </h2>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Corina Balan\\Desktop\\FoodWaste-App\\frontend\\src\\components\\pages\\popup.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":12},{"ruleId":"141","severity":1,"message":"145","line":8,"column":10,"nodeType":"143","messageId":"144","endLine":8,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":43,"column":21,"nodeType":"148","endLine":43,"endColumn":55},{"ruleId":"146","severity":1,"message":"147","line":60,"column":21,"nodeType":"148","endLine":60,"endColumn":49},{"ruleId":"141","severity":1,"message":"149","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"150","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":12},{"ruleId":"141","severity":1,"message":"151","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":13},{"ruleId":"141","severity":1,"message":"152","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":12},{"ruleId":"141","severity":1,"message":"153","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":16},{"ruleId":"141","severity":1,"message":"145","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":27},{"ruleId":"141","severity":1,"message":"154","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":18},{"ruleId":"141","severity":1,"message":"155","line":4,"column":20,"nodeType":"143","messageId":"144","endLine":4,"endColumn":25},{"ruleId":"156","severity":1,"message":"157","line":36,"column":6,"nodeType":"158","endLine":36,"endColumn":8,"suggestions":"159"},{"ruleId":"141","severity":1,"message":"160","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"154","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":18},{"ruleId":"141","severity":1,"message":"155","line":3,"column":20,"nodeType":"143","messageId":"144","endLine":3,"endColumn":25},{"ruleId":"141","severity":1,"message":"161","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":18},{"ruleId":"156","severity":1,"message":"162","line":27,"column":6,"nodeType":"158","endLine":27,"endColumn":8,"suggestions":"163"},{"ruleId":"156","severity":1,"message":"164","line":68,"column":6,"nodeType":"158","endLine":68,"endColumn":15,"suggestions":"165"},{"ruleId":null,"fatal":true,"severity":2,"message":"166","line":67,"column":9},{"ruleId":"141","severity":1,"message":"167","line":11,"column":10,"nodeType":"143","messageId":"144","endLine":11,"endColumn":14},{"ruleId":"156","severity":1,"message":"168","line":84,"column":6,"nodeType":"158","endLine":84,"endColumn":30,"suggestions":"169"},{"ruleId":"156","severity":1,"message":"170","line":68,"column":6,"nodeType":"158","endLine":68,"endColumn":15,"suggestions":"171"},{"ruleId":"156","severity":1,"message":"172","line":82,"column":6,"nodeType":"158","endLine":82,"endColumn":15,"suggestions":"173"},{"ruleId":"146","severity":1,"message":"147","line":12,"column":9,"nodeType":"148","endLine":12,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":20,"column":9,"nodeType":"148","endLine":20,"endColumn":30},{"ruleId":"174","severity":1,"message":"175","line":24,"column":19,"nodeType":"176","messageId":"177","endLine":24,"endColumn":21},{"ruleId":"178","severity":1,"message":"179","line":80,"column":7,"nodeType":"180","messageId":"181","endLine":90,"endColumn":8},{"ruleId":"156","severity":1,"message":"182","line":140,"column":6,"nodeType":"158","endLine":140,"endColumn":25,"suggestions":"183"},{"ruleId":"146","severity":1,"message":"147","line":12,"column":9,"nodeType":"148","endLine":12,"endColumn":56},{"ruleId":"174","severity":1,"message":"184","line":14,"column":19,"nodeType":"176","messageId":"177","endLine":14,"endColumn":21},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'useSetRecoilState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Profiler' is defined but never used.","'User' is defined but never used.","'Group' is defined but never used.","'Food' is defined but never used.","'Category' is defined but never used.","'listData' is defined but never used.","'route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["187"],"'Suspense' is defined but never used.","'ObjectList' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'setUser'. Either include them or remove the dependency array.",["188"],"React Hook useEffect has a missing dependency: 'getGroups'. Either include it or remove the dependency array.",["189"],"Parsing error: Identifier 'currentUser' has already been declared\n\n\u001b[0m \u001b[90m 65 | \u001b[39m  }\u001b[33m,\u001b[39m [])\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 66 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 67 | \u001b[39m  \u001b[36mconst\u001b[39m currentUser \u001b[33m=\u001b[39m useRecoilValue(user)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 68 | \u001b[39m  \u001b[36mconst\u001b[39m history \u001b[33m=\u001b[39m useHistory()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 69 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 70 | \u001b[39m  \u001b[36mif\u001b[39m (currentUser \u001b[33m==\u001b[39m undefined) {\u001b[0m","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFood'. Either include it or remove the dependency array.",["190"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["191"],"React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["192"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'currentFriends', 'currentUser.email', 'currentUser.firstName', 'currentUser.id', 'currentUser.lastname', 'getFriends', 'history', and 'setCurrentFriend'. Either include them or remove the dependency array.",["193"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [history]",{"range":"208","text":"209"},"Update the dependencies array to be: [history, setUser]",{"range":"210","text":"211"},"Update the dependencies array to be: [getGroups, setData]",{"range":"212","text":"213"},"Update the dependencies array to be: [getFood, setCategories, setData]",{"range":"214","text":"215"},"Update the dependencies array to be: [getCategories, setData]",{"range":"216","text":"217"},"Update the dependencies array to be: [getUsers, setData]",{"range":"218","text":"219"},"Update the dependencies array to be: [currentFriends, currentUser.email, currentUser.firstName, currentUser.id, currentUser.lastname, getFriends, history, setCurrentFriend, setCurrentFriends]",{"range":"220","text":"221"},[1181,1183],"[history]",[909,911],"[history, setUser]",[2076,2085],"[getGroups, setData]",[2795,2819],"[getFood, setCategories, setData]",[2222,2231],"[getCategories, setData]",[2922,2931],"[getUsers, setData]",[4249,4268],"[currentFriends, currentUser.email, currentUser.firstName, currentUser.id, currentUser.lastname, getFriends, history, setCurrentFriend, setCurrentFriends]"]